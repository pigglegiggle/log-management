version: "3.9"

networks:
  app_net:
    driver: bridge

volumes:
  db_data:
  caddy_data:
  caddy_config:

services:
  fluent-bit:
    image: cr.fluentbit.io/fluent/fluent-bit:latest
    container_name: fluent-bit
    volumes:
      - ./fluent-bit:/fluent-bit/config
      - ./logs:/logs
    command: /fluent-bit/bin/fluent-bit -c /fluent-bit/config/fluent-bit.conf
    ports:
      - "514:514/udp"
      - "515:515/udp"
    networks:
      - app_net

  db:
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
    networks:
      - app_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3002:3002"
    environment:
      - HOST=0.0.0.0
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_net

  ingest:
    build:
      context: ./ingest
      dockerfile: Dockerfile
    container_name: ingest
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
    volumes:
      - ./logs:/logs
    env_file:
      - ./ingest/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3001:3001"
    environment:
      - HOST=0.0.0.0
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app_net

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
    networks:
      - app_net
